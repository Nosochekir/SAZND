---
title: "lab4"
---

# Развертывание Threat intelligence Platform OpenCTI

## Цель работы

1.  Освоить базовые подходы процессов Threat Intelligence

2.  Освоить современные инструменты развертывания контейнеризованных
    приложений

3.  Получить навыки поиска информации об угрозах ИБ

## Исходные данные

1.  ОС Ubuntu 22.04
2.  RStudio Desktop
3.  Docker
4.  ElasticSearch

## Ход выполнения практической работы

Для разворачивания системы threat intelligence OpenCTI была использована
система контейнеризации приложений Docker.

### Шаг 1 - Предварительная конфигурация

### 1. Для работы ElasticSearch требуется увеличить размер виртуальной памяти системы:

``` 
    sudo sysctl -w vm.max_map_count=1048575
```

### 2. Создание файла конфигурации

Был создан файл окружения .env со следующими параметрами:

![image](https://github.com/Nosochekir/SAZND/assets/90778008/a01e49b3-c9d8-4ce5-bfb1-38827331c394)


### 3. Создаём Docker-compose.yml и запускаем его

``` 
docker-compose up 
```

![image](https://github.com/Nosochekir/SAZND/assets/90778008/9f2d836e-c5c7-4fa0-906a-5c626897c63a)

### Шаг 2. Использование системы threat intelligence OpenCTI

#### 1. После перехода на веб-ресурс OpenCTI пользователя встречает поле авторизации

![image](https://github.com/Nosochekir/SAZND/assets/90778008/46027344-4879-4386-b7b1-154c3a0379fc)

#### 2. После входа появляется веб-интерфейс:

![image](https://github.com/Nosochekir/SAZND/assets/90778008/add6d290-a65c-47dc-ac05-64c369042900)

#### 3. Импортируем содержимое файла hosts.txt как индикаторы, используя API Opencti

``` python
import pycti
from stix2 import TLP_GREEN
from datetime import datetime
date = datetime.today().strftime("%Y-%m-%dT%H:%M:%SZ")

api_url = 'http://localhost:8080'
api_token = 'd19af35b-1374-4131-bf92-2afcefdaa204'
client = pycti.OpenCTIApiClient(api_url, api_token)

TLP_GREEN_CTI = client.marking_definition.read(id=TLP_GREEN["id"])
with open('hosts.txt', 'r') as f:
    domains = f.read().splitlines()
k = 1
for domain in domains:
    indicator = client.indicator.create(
    name="Malicious domain {}".format(k),
    description="Micola hosts",
    pattern_type="stix",
    label="micola hosts",
    pattern="[domain-name:value = '{}']".format(domain),
    x_opencti_main_observable_type="IPv4-Addr",
    valid_from=date,
    update=True,
    score=75,
    markingDefinitions=[TLP_GREEN_CTI["id"]],
    )
    print("Создан индикатор:", indicator["id"])
    k += 1
```

#### 4. Импортируем сетевой трафик (файл dns.log, полученный в PR2) в OpenCTI

![image](https://github.com/Nosochekir/SAZND/assets/90778008/f0ff347e-09be-447f-ba95-ce5f8f09dd3d)

#### 5. Добавляем dns.log в рабочую область, переходим в раздел анализа и фильтруем трафик для просмотра нежелательного

![image](https://github.com/Nosochekir/SAZND/assets/90778008/8b237267-507d-4b56-9b80-bc1f7ad95090)

## Оценка результата

С помощью платформы OpenCTI удалось проанализировать трафик на предмет
перехода по нежелательным доменам.

## Выводы

Таким образом, были изучены возможности работы с платформой threat
intelligence OpenCTI.
